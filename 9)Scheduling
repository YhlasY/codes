// Given n events with their starting and ending times, find a schedule that includes as many events as possible (Greedy)
#include "bits/stdc++.h"
using namespace std;

int main() {
    ios::sync_with_stdio(false); cin.tie(nullptr);

    int n;
    cin >> n;
    pair <int, int> a[n + 1];
    for (int i = 1; i <= n; i++) cin >> a[i].second >> a[i].first; //a[i].first is end time, a[i].second is begin time

    sort(a + 1, a + n + 1);

    int last = 0;
    vector <int> ans;
    for (int i = 1; i <= n; i++) {
        if (a[i].second >= last) {
            ans.push_back(i);
            last = a[i].first;
        }
    }

    for (auto i : ans) cout << a[i].second << ' ' << a[i].first << "\n";
}
