#include "bits/stdc++.h"
using namespace std;

#define N 100005

int n, cnt = 0;

bool col[N], diag1[N], diag2[N]; // we don't need row cause we don't put two queens in one row cause x describe row and x is increasing

vector <pair<int, int>> v;

void f(int x) {
    if (x == n + 1) {
        vector <vector<int>> a(n + 1, vector<int>(n + 1, 0));
        for (auto i : v) a[i.first][i.second] = 1;
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= n; j++) cout << a[i][j] << ' ';
            cout << "\n";
        }
        cout << "\n";
        cnt++;
        return;
    }
    for (int y = 1; y <= n; y++) {
        if (col[y] || diag1[x + y] || diag2[x - y + n]) continue; //diag2[x - y + n] cause (x - y) can be negative
        col[y] = diag1[x + y] = diag2[x - y + n] = true;
        v.emplace_back(x, y);
        f(x + 1);
        v.pop_back();
        col[y] = diag1[x + y] = diag2[x - y + n] = false;
    }
}

int main() {
    ios::sync_with_stdio(false); cin.tie(nullptr);

    cin >> n;
    f(1);
    cout << "count : " << cnt;
}
